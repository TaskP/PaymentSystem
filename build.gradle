plugins {
	id 'java'
	id 'org.springframework.boot' version '3.1.5'
	id 'io.spring.dependency-management' version '1.1.3'
	id 'checkstyle'
}

apply plugin: "eclipse"

group = 'com.example'
version = '1.0.1'

java {
	sourceCompatibility = '17'
}

jar {
	manifest {
		attributes 'Main-Class': 'com.example.payment.main.web.AppWeb'
	}
}

repositories {
	mavenCentral()
}

configurations.all {
	exclude group: "commons-logging", module: "commons-logging"
}
	
dependencies {
	
	implementation 'com.mysql:mysql-connector-j:8.2.0'
	implementation 'com.opencsv:opencsv:5.8'
	implementation 'org.postgresql:postgresql'

	implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
	implementation 'org.springframework.boot:spring-boot-starter-security'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-tomcat'	
	
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.security:spring-security-test'
	
	runtimeOnly 'org.junit.platform:junit-platform-launcher'
}

tasks.named("bootJar") {
	mainClass = 'com.example.payment.main.AppWeb'
}

tasks.named("bootRun") {
	mainClass = 'com.example.payment.main.AppWeb'
}

checkstyle {
    configFile file("config/checkstyle/checkstyle.xml")
}
checkstyleMain {
    source ='src/main/java'
}
checkstyleTest {
    source ='src/test/java'
}
tasks.withType(Checkstyle) {
    reports {
        xml.required = false
        html.required = true
    }
}


tasks.named('test') {
	useJUnitPlatform()
}

task userImport(type: JavaExec){
	group = "Application"  
	description = "Import new users from CSV file. Expects CSVFile as an argument. Example: ./gradlew userImport -PCSVFile=data/users.csv"  
	systemProperty 'spring.profiles.active', 'cli'
	mainClass = "com.example.payment.main.AppCliUserImport"
	classpath = sourceSets.main.runtimeClasspath
	if (project.hasProperty("CSVFile")) {
		args project.getProperty("CSVFile")
	}
}

task merchantImport(type: JavaExec){
	group = "Application"  
	description = "Import merchants from CSV file. Expects CSVFile as an argument. Example: ./gradlew merchantImport -PCSVFile=data/merchants.csv"  
	systemProperty 'spring.profiles.active', 'cli'
	mainClass = "com.example.payment.main.AppCliMerchantImport"
	classpath = sourceSets.main.runtimeClasspath
	if (project.hasProperty("CSVFile")) {
		args project.getProperty("CSVFile")
	}
}


//EOF


